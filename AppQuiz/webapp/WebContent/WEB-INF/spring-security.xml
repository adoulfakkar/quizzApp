<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	
	<security:http pattern="/**" use-expressions="true" auto-config="false" create-session="stateless"
		authentication-manager-ref="authenticationManager"  >
		<security:intercept-url pattern="/rest/user/login" access="permitAll" />
		<security:intercept-url pattern="/rest/user/download/login" access="permitAll" />
		<security:intercept-url pattern="/get/application.apk" access="permitAll" />
		<security:intercept-url pattern="/rest/get/application.apk" access="permitAll" />
		<security:intercept-url pattern="/rest/get/video.mp4" access="permitAll" />
		<security:intercept-url pattern="/get/video.mp4" access="permitAll" />
		<security:intercept-url pattern="/**" access="hasRole('USER')" />
		<security:custom-filter ref="tokenBaseFilter" before="BASIC_AUTH_FILTER"/>
		<security:logout logout-url="/logout"/>
		<security:http-basic/>
	</security:http>
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="userAuthenticationProvider">
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>